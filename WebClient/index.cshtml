<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <!--<meta name="viewport" content="width=device-width, initial-scale=1.0">-->
    <link href="Content/bootstrap.min.css" rel="stylesheet" />
    <script src="Scripts/jquery-1.8.2.min.js"></script>
    <script src="Scripts/bootstrap.min.js"></script>
    <script src="Scripts/knockout-2.1.0.js"></script>
    <script type="text/javascript">

        var ws;

        var apiKey = "@System.Configuration.ConfigurationManager.AppSettings["googleApiKey"]";

        function connect() {
            $("#btn_Connect").attr("disabled", true);
            $("#btn_Disconnect").attr("disabled", false);

            ws = new WebSocket("ws://@System.Configuration.ConfigurationManager.AppSettings["server"]:81");
            ws.onopen = function () {
                setStatus("Connected");

                var preFilter = $("#filter-pre-location").val();
                if (preFilter && preFilter.length > 0) {
                    preFilterLocation(preFilter.substring(0, (preFilter.indexOf('(') - 1)));
                }
            };
            ws.onmessage = function (msg) {
                var data = jQuery.parseJSON(msg.data);
                console.debug(data);
                setStatus("Received " + data.length + " messages at " + new Date(Date.now()).toLocaleString());
                for (var i = 0; i < data.length; i++) {
                    var message = data[i]; //.body;

                    var existing = $("#" + message.train_id).length == 1;
                    if (existing) {
                        cls = "sub";
                        parent = message.train_id;
                    } else {
                        cls = "first";
                        parent = null;
                    }

                    var style = "";
                    if (currentFilter &&
                        currentFilter.length > 0 &&
                        message.loc_stanox != currentFilter &&
                        message.train_id != currentFilter) {
                        style = "display:none;";
                    }

                    var date = new Date(new Number(message.actual_timestamp));
                    var html = "";

                    if (!existing) {
                        html += "<tr class=\"" + cls + " " + message.train_id + " " + message.loc_stanox + " info\" style=\"" + style + "\" id=\"" + message.train_id + "\">";
                        html += "<td><a href=\"#\" onclick=\"filterTrain('" + message.train_id + "');\">" + message.train_id + "</a></td>";
                        html += "<td>" + message.train_service_code + "</td>";
                        html += "<td colspan=\"5\">&nbsp;&nbsp;</td>";
                        html += "</tr>";
                    }

                    html += "<tr class=\"" + cls + " " + message.train_id + " " + message.loc_stanox + "\" style=\"" + style + "\" data-timestamp=\"" + message.actual_timestamp + "\">";
                    html += "<td colspan=\"2\">&nbsp;&nbsp;</td>";
                    html += "<td>" + message.event_type + "</td>";
                    html += "<td>" + padTime(date.getUTCHours()) + ":" + padTime(date.getUTCMinutes()) + ":" + padTime(date.getUTCSeconds()) + "</td>";
                    html += "<td>" + message.direction_ind + "</td>";
                    html += "<td>" + message.platform + "</td>";
                    html += "<td><a href=\"#\" class=\"stanox-" + message.loc_stanox + "\" onclick=\"loadLocation('" + message.loc_stanox + "')\">" + message.loc_stanox + "</a></td>";

                    html += "</tr>";

                    if (message.train_terminated && message.train_terminated == "true") {
                        html += "<tr class=\"" + cls + " " + message.train_id  + " " + message.loc_stanox + " warning\"  style=\"" + style + "\"><td colspan=\"7\">Terminated</td></tr>";
                    }

                    addMessage(html, parent);

                    sortTrainId(message.train_id);

                    fetchStanox(message.loc_stanox);
                }
            };
            ws.onclose = function () {
                setStatus("Disconnected");
                $("#btn_Connect").attr("disabled", false);
                $("#btn_Disconnect").attr("disabled", true);
            };
        }

        function sortTrainId(trainId) {
            if (!trainId || trainId.length == 0)
                return;

            var rows = $("#table-trains tbody tr." + trainId).not(".info, .warning");
            if (rows.length <= 1)
                return;

            var header = $("#table-trains tbody tr." + trainId + ".info").get(0);

            $(rows).each(function (el) {
                $(el).detach();
            });

            var ordered = rows.get().sort(function (a, b) {
                return $(a).data("timestamp") - $(b).data("timestamp");
            });

            $(header).after(ordered);
        }

        function padTime(time) {
            if (time < 10)
                return "0" + time;
            return time;
        }

        function disconnect() {
            $("#btn_Connect").attr("disabled", false);
            $("#btn_Disconnect").attr("disabled", true);

            ws.close();
            setStatus("Closed");
        }

        function setStatus(status) {
            $("#status").html(status);
        }

        function addMessage(message, parent) {
            if (parent) {
                $("#" + parent).after(message);
            } else {
                $("#data").append(message);
            }
        }

        function LocationViewModel() {
            this.locationStanox = ko.observable();
            this.locationTiploc = ko.observable();
            this.locationDescription = ko.observable();
            this.locationCRS = ko.observable();
            this.stationName = ko.observable();
            this.stationLocation = ko.observable();
        }

        var currentLocation = new LocationViewModel();

        function fetchStanox(stanox) {
            if (!stanox || stanox.length == 0)
                return;

            $.getJSON("http://@System.Configuration.ConfigurationManager.AppSettings["server"]:82/Stanox/", { id: stanox }, function (data) {
                if (data.CRS) {
                    tooltip = data.StationName + '(' + data.CRS + ')';
                } else {
                    tooltip = data.Tiploc;
                }
                $(".stanox-" + stanox).html(tooltip);
                $(".stanox-" + stanox).tooltip({
                    title: stanox
                });
            });
        }

        function loadLocation(stanox) {
            if (!stanox || stanox.length == 0)
                return;

            currentLocation.locationStanox(stanox);
            $.getJSON("http://@System.Configuration.ConfigurationManager.AppSettings["server"]:82/Stanox/", { id: stanox }, function (data) {
                currentLocation.locationTiploc(data.Tiploc);
                currentLocation.locationDescription(data.Description);
                currentLocation.locationCRS(data.CRS);
                currentLocation.stationName(data.StationName);
                currentLocation.stationLocation(data.Lat + ", " + data.Lon);
                if (data.Lat && data.Lon) {
                    $("#station-loc").attr("src",
                        "http://maps.googleapis.com/maps/api/staticmap?center=" + data.Lat + "," + data.Lon +
                        "5&zoom=14&size=310x310&sensor=false&style=feature:transit.station.rail" +
                        "&key=" + apiKey);
                    $("#station-loc").show();
                } else {
                    $("#station-loc").hide();
                }
            });
        }

        var currentFilter = '';

        function filter(location) {
            if (!location || location.length == 0) {
                currentFilter = '';
                $("#table-trains tbody tr").show();
                return;
            }

            $.getJSON("http://@System.Configuration.ConfigurationManager.AppSettings["server"]:82/Station/", { id: location }, function (data) {
                currentFilter = data.Name;
                $("#table-trains tbody tr").hide();
                $("#table-trains tbody tr." + data.Name).show();
            });
        }

        function filterTrain(trainid) {
            if (!trainid || trainid.length == 0 || trainid == currentFilter) {
                currentFilter = '';
                $("#table-trains tbody tr").show();
                return;
            }
            currentFilter = trainid;
            $("#table-trains tbody tr").hide();
            $("#table-trains tbody tr." + trainid).show();
        }

        function preFilterLocation(location) {
            if (!location || location.length == 0) {
                sendPreFilter('');
            } else {
                $.getJSON("http://@System.Configuration.ConfigurationManager.AppSettings["server"]:82/Station/", { id: location }, function (data) {
                    sendPreFilter(data.Name);
                });
            }
        }

        function sendPreFilter(location) {
            if (ws /*&& w*/)
                ws.send(location);
        }

        function clearTable() {
            $("#table-trains tbody tr").detach();
        }

        var _locations;

        $(function () {
            ko.applyBindings(currentLocation, $("#locationDetails").get(0));

            $.getJSON("http://@System.Configuration.ConfigurationManager.AppSettings["server"]:82/Station/", null, function (results) {
                if (!results || results.length == 0)
                    return;

                _locations = Array();

                for (var i = 0; i < results.length; i++) {
                    if (results[i] && results[i].length > 0)
                        _locations.push(results[i]);
                }

                $("#filter-location").typeahead({
                    source: _locations,
                    updater: function (item) {
                        filter(item.substring(0, (item.indexOf('(') - 1)));
                        return item;
                    }
                });

                $("#filter-pre-location").typeahead({
                    source: _locations,
                    update: function (item) {
                        sendPreFilter(item.substring(0, (item.indexOf('(') - 1)));
                        return item;
                    }
                });
            });

            $('#filter-location').on('change', function (evt) {
                if ($(evt.target).val() == '') {
                    filter(null);
                }
            });

            $('#filter-pre-location').on('change', function (evt) {
                var item = $(evt.target).val();
                if (item && item.length > 0)
                    preFilterLocation(item.substring(0, (item.indexOf('(') - 1)));
                else
                    sendPreFilter('');
            });
        });

    </script>
    <style type="text/css">
        html,
        body {
            height: 100%;
        }

        #wrap {
            min-height: 100%;
            height: auto !important;
            height: 100%;
            margin: 0 auto -60px;
        }

        #push,
        #footer {
            height: 60px;
        }

        #wrap > .container {
            margin-bottom: 20px;
        }

        #footer .container {
            padding: 20px 0;
            border-top: 1px solid #e7e7e7;
        }

        #footer p {
            color: #777;
            margin-bottom: 0;
        }
    </style>
</head>
<body>
    <div id="wrap">
        <div class="navbar navbar-fixed-top">
            <div class="navbar-inner">
                <div class="container">
                    <a class="brand" href="#">WebSocket Example</a>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span3">
                    <div class="well sidebar-nav" id="locationDetails">
                        <ul class="nav nav-list clearfix">
                            <br />
                            <li class="nav-header">Location</li>
                            <li><strong>Stanox:</strong> <span data-bind="text: locationStanox"></span></li>
                            <li><strong>Tiploc:</strong> <span data-bind="text: locationTiploc"></span></li>
                            <li><strong>Description:</strong> <span data-bind="text: locationDescription"></span></li>
                            <li><strong>CRS:</strong> <span data-bind="text: locationCRS"></span></li>
                            <li class="nav-header">Station</li>
                            <li><strong>Name:</strong> <span data-bind="text: stationName"></span></li>
                            <li><span><i class="icon-map-marker"></i></span><span data-bind="text: stationLocation"></span></li>
                            <li>
                                <img id="station-loc" style="width: 310px; height: 310px; display: none;" />
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="span9">
                    <div class="hero-unit">
                        <div class="btn-group">
                            <div class="input-prepend">
                                <span class="add-on"><i class="icon-filter"></i></span>
                                <input type="text" id="filter-pre-location" class="span4" placeholder="Filter Data Location (optional)" title="Clear and press ENTER to reset" />&nbsp;&nbsp;&nbsp;
                            </div>
                            <a class="btn" id="btn_Connect" onclick="connect()" title="Connect to server"><i class="icon-play"></i></a>
                            <a class="btn" id="btn_Disconnect" onclick="disconnect()" disabled="disabled" title="Disconnect from server"><i class="icon-stop"></i></a>
                            <a class="btn" href="#" title="Clear table" onclick="clearTable();"><i class="icon-remove"></i></a>
                        </div>
                        <div class="clearfix">
                            <br />
                        </div>
                        <div class="alert alert-info" id="status">
                        </div>
                        <div class="navbar-inner">
                            <form class="navbar-search pull-right" onsubmit="return false;">
                                <div class="input-prepend" style="margin-right: 20px">
                                    <span class="add-on"><i class="icon-filter"></i></span>
                                    <input type="text" id="filter-location" class="span12" placeholder="Filter Table Location" title="Clear and press ENTER to reset" />
                                    <br />
                                </div>
                            </form>
                        </div>
                        <div style="height: 500px; overflow: auto;">
                            <table class="table .table-hover table-bordered" id="table-trains">
                                <thead>
                                    <th>Train ID</th>
                                    <th>Service Code</th>
                                    <th>Action</th>
                                    <th>Time</th>
                                    <th>Direction</th>
                                    <th>Platform</th>
                                    <th>Location</th>
                                </thead>
                                <tbody id="data">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="push"></div>
    </div>
    <div id="footer">
        <div class="container">
            <p>
                Copyright &copy; Michael Pritchard 2012. <a href="https://twitter.com/blueghostuk" class="twitter-follow-button" data-show-count="false">Follow @@blueghostuk</a>
<script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
                <br />Contains information of Network Rail Infrastructure Limited licensed under the following licence:<br />
                <a href="http://www.networkrail.co.uk/data-feeds/terms-and-conditions" target="_blank" title="Opens in new window"><i class="icon-share-alt" title="Opens in new window"></i>www.networkrail.co.uk/data-feeds/terms-and-conditions</a>
                <br />
                Uses: <a href="http://twitter.github.com/bootstrap/" target="_blank"><i class="icon-share-alt" title="Opens in new window"></i>Twitter Bootstrap</a>, 
                <a href="http://alchemywebsockets.net/" target="_blank"><i class="icon-share-alt" title="Opens in new window"></i>Alchemy Websockets</a> (server-side).
                Source: <a href="https://github.com/blueghostuk/networkrail-downloader" target="_blank"><i class="icon-share-alt" title="Opens in new window"></i>on github</a>
            </p>
        </div>
    </div>
</body>
</html>
