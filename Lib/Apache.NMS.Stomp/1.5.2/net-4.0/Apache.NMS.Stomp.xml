<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apache.NMS.Stomp</name>
    </assembly>
    <members>
        <member name="T:Apache.NMS.Stomp.Commands.BaseDataStructure">
            <summary>
            Base class for all DataStructure implementations
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.DataStructure">
            <summary>
            An OpenWire command
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.Command">
            <summary>
            An Stomp command
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.MarshallAware">
            <summary>
            Represents a marshallable entity
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.BaseMessage.Clone">
            
             <summery>
              Clone this object and return a new instance that the caller now owns.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.BaseMessage.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.BaseMessage.IsMessage">
            
             <summery>
              Return an answer of true to the isMessage() query.
             </summery>
            
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.BrokerError">
            <summary>
            Represents an exception on the broker
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSCorrelationID">
            <summary>
            The correlation ID used to correlate messages with conversations or long running business processes
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSDestination">
            <summary>
            The destination of the message
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSTimeToLive">
            <summary>
            The time in milliseconds that this message should expire in
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSTimestamp">
            <summary>
            The timestamp the broker added to the message
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSMessageId">
            <summary>
            The message ID which is set by the provider
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSDeliveryMode">
            <summary>
            Whether or not this message is persistent
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSPriority">
            <summary>
            The Priority on this message
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSRedelivered">
            <summary>
            Returns true if this message has been redelivered to this or another consumer before being acknowledged successfully.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSReplyTo">
            <summary>
            The destination that the consumer of this message should send replies to
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSType">
            <summary>
            The type name of this message
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSXDeliveryCount">
            <summary>
            Returns the number of times this message has been redelivered to other consumers without being acknowledged successfully.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSXGroupID">
            <summary>
            The Message Group ID used to group messages together to the same consumer for the same group ID value
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSXGroupSeq">
            <summary>
            The Message Group Sequence counter to indicate the position in a group
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Message.NMSXProducerTXID">
            <summary>
            Returns the ID of the producers transaction
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionError.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionError.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.ConnectionError.IsConnectionError">
            
             <summery>
              Return an answer of true to the isConnectionError() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionInfo.GetDataStructureType">
            <summery>
            Get the unique identifier that this object and its own
            Marshaler share.
            </summery>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConnectionInfo.ToString">
            <summery>
            Returns a string containing the information for this DataStructure
            such as its type and value of its elements.
            </summery>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.ConnectionInfo.IsConnectionInfo">
            <summery>
            Return an answer of true to the isConnectionInfo() query.
            </summery>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConsumerId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConsumerId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConsumerInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ConsumerInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.ConsumerInfo.IsConsumerInfo">
            
             <summery>
              Return an answer of true to the isConsumerInfo() query.
             </summery>
            
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.Destination">
            <summary>
            Summary description for Destination.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Commands.Destination.STOMP_TOPIC">
            <summary>
            Topic Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Commands.Destination.STOMP_TEMPORARY_TOPIC">
            <summary>
            Temporary Topic Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Commands.Destination.STOMP_QUEUE">
            <summary>
            Queue Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Commands.Destination.STOMP_TEMPORARY_QUEUE">
            <summary>
            Temporary Queue Destination object
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.#ctor">
            <summary>
            The Default Constructor
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.#ctor(System.String)">
            <summary>
            Construct the Destination with a defined physical name;
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.Transform(Apache.NMS.IDestination)">
            <summary>
            </summary>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.CreateDestination(System.Int32,System.String,System.Boolean)">
            <summary>
            Create a Destination using the name given, the type is determined by the
            value of the type parameter.
            </summary>
            <param name="type"></param>
            <param name="pyhsicalName"></param>
            <param name="remote"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.CompareTo(System.Object)">
            <summary>
            </summary>
            <param name="o">object to compare</param>
            <returns>1 if this is less than o else 0 if they are equal or -1 if this is less than o</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.CompareTo(Apache.NMS.Stomp.Commands.Destination)">
            <summary>
            Lets sort by name first then lets sort topics greater than queues
            </summary>
            <param name="that">another destination to compare against</param>
            <returns>1 if this is less than o else 0 if they are equal or -1 if this is less than o</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.GetDestinationType">
            <summary>
            </summary>
            <returns>Returns the Destination type</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.ToString">
            <summary>
            </summary>
            <returns>string representation of this instance</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.GetHashCode">
            <summary>
            </summary>
            <returns>hashCode for this instance</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.Equals(System.Object)">
            <summary>
            if the object passed in is equivalent, return true
            </summary>
            <param name="obj">the object to compare</param>
            <returns>true if this instance and obj are equivalent</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Destination.CreateDestination(System.String)">
            <summary>
            Factory method to create a child destination if this destination is a composite
            </summary>
            <param name="name"></param>
            <returns>the created Destination</returns>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Destination.Options">
            <summary>
            Dictionary of name/value pairs representing option values specified
            in the URI used to create this Destination.  A null value is returned
            if no options were specified.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Destination.RemoteDestination">
            <summary>
            Indicates if the Desination was created by this client or was provided
            by the broker, most commonly the deinstinations provided by the broker
            are those that appear in the ReplyTo field of a Message.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Destination.IsComposite">
            <summary>
            Returns true if this destination represents a collection of
            destinations; allowing a set of destinations to be published to or subscribed
            from in one NMS operation.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.Response.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.Response.IsResponse">
            
             <summery>
              Return an answer of true to the isResponse() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ExceptionResponse.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ExceptionResponse.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.KeepAliveInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.KeepAliveInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.KeepAliveInfo.visit(Apache.NMS.Stomp.State.ICommandVisitor)">
            
             <summery>
              Allows a Visitor to visit this command and return a response to the
              command based on the command type being visited.  The command will call
              the proper processXXX method in the visitor.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.KeepAliveInfo.IsKeepAliveInfo">
            
             <summery>
              Return an answer of true to the isKeepAliveInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageAck.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageAck.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.MessageAck.IsMessageAck">
            
             <summery>
              Return an answer of true to the isMessageAck() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageDispatch.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageDispatch.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.MessageDispatch.IsMessageDispatch">
            
             <summery>
              Return an answer of true to the isMessageDispatch() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.MessageId.SetValue(System.String)">
            <summary>
            Sets the value as a String
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ProducerId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ProducerId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ProducerInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ProducerInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.ProducerInfo.IsProducerInfo">
            
             <summery>
              Return an answer of true to the isProducerInfo() query.
             </summery>
            
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.Queue">
            <summary>
            Summary description for Queue.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.RemoveInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.RemoveInfo.visit(Apache.NMS.Stomp.State.ICommandVisitor)">
            
             <summery>
              Allows a Visitor to visit this command and return a response to the
              command based on the command type being visited.  The command will call
              the proper processXXX method in the visitor.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.RemoveInfo.IsRemoveInfo">
            
             <summery>
              Return an answer of true to the isRemoveInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.RemoveSubscriptionInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.RemoveSubscriptionInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.RemoveSubscriptionInfo.IsRemoveSubscriptionInfo">
            
             <summery>
              Return an answer of true to the isRemoveSubscriptionInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SessionId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SessionId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SessionInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SessionInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.SessionInfo.IsSessionInfo">
            
             <summery>
              Return an answer of true to the isSessionInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ShutdownInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.ShutdownInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.ShutdownInfo.IsShutdownInfo">
            
             <summery>
              Return an answer of true to the isShutdownInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SubscriptionInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.SubscriptionInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TempDestination.GetDestinationType">
            <summary>
            Method GetDestinationType
            </summary>
            <returns>An int</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TempDestination.CreateDestination(System.String)">
            <summary>
            Method CreateDestination
            </summary>
            <returns>An Destination</returns>
            <param name="name">A  String</param>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.TempQueue">
            <summary>
            A Temporary Queue
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.TempTopic">
            <summary>
            A Temporary Topic
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Commands.Topic">
            <summary>
            Summary description for Topic.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TransactionId.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TransactionId.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TransactionInfo.GetDataStructureType">
            
             <summery>
              Get the unique identifier that this object and its own
              Marshaler share.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.TransactionInfo.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.TransactionInfo.IsTransactionInfo">
            
             <summery>
              Return an answer of true to the isTransactionInfo() query.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.WireFormatInfo.GetDataStructureType">
            <summery>
            Get the unique identifier that this object and its own
            Marshaler share.
            </summery>
        </member>
        <member name="M:Apache.NMS.Stomp.Commands.WireFormatInfo.ToString">
            <summery>
            Returns a string containing the information for this DataStructure
            such as its type and value of its elements.
            </summery>
        </member>
        <member name="P:Apache.NMS.Stomp.Commands.WireFormatInfo.IsWireFormatInfo">
            <summery>
            Return an answer of true to the IsWireFormatInfo() query.
            </summery>
        </member>
        <member name="T:Apache.NMS.Stomp.Protocol.IPrimitiveMapMarshaler">
            <summary>
            Interface for a utility class used to marshal an IPrimitiveMap instance
            to/from an String.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Protocol.IPrimitiveMapMarshaler.Marshal(Apache.NMS.IPrimitiveMap)">
            <summary>
            Marshals a PrimitiveMap instance to an serialized byte array.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Protocol.IPrimitiveMapMarshaler.Unmarshal(System.Byte[])">
            <summary>
            Un-marshals an IPrimitiveMap instance from a String object.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Protocol.IPrimitiveMapMarshaler.Name">
            <summary>
            Retreives the Name of this Marshaler.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Protocol.StompFrame.NEWLINE">
            Used to terminate a header line or end of a headers section of the Frame.
        </member>
        <member name="F:Apache.NMS.Stomp.Protocol.StompFrame.SEPARATOR">
            Used to seperate the Key / Value pairing in Frame Headers
        </member>
        <member name="F:Apache.NMS.Stomp.Protocol.StompFrame.FRAME_TERMINUS">
            Used to mark the End of the Frame.
        </member>
        <member name="F:Apache.NMS.Stomp.Protocol.StompFrame.KEEPALIVE">
            Used to denote a Special KeepAlive command that consists of a single newline.
        </member>
        <member name="T:Apache.NMS.Stomp.Protocol.StompHelper">
            <summary>
            Some <a href="http://stomp.codehaus.org/">STOMP</a> protocol conversion helper methods.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Protocol.StompWireFormat">
            <summary>
            Implements the <a href="http://stomp.codehaus.org/">STOMP</a> protocol.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.IWireFormat">
            <summary>
            Represents the marshalling of commands to and from an IO stream
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.IWireFormat.Marshal(System.Object,System.IO.BinaryWriter)">
            <summary>
            Marshalls the given command object onto the stream
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.IWireFormat.Unmarshal(System.IO.BinaryReader)">
            <summary>
            Unmarshalls the next command object from the stream
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Protocol.XmlPrimitiveMapMarshaler">
            <summary>
            Reads / Writes an IPrimitveMap as XML compatible with XStream.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.State.ConnectionStateTracker">
            <summary>
            Tracks the state of a connection so a newly established transport can be
            re-initialized to the state that was tracked.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.State.ConnectionStateTracker.track(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            </summary>
            <param name="command"></param>
            <returns>null if the command is not state tracked.</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.State.ConnectionStateTracker.DoRestoreConsumers(Apache.NMS.Stomp.Transport.ITransport,Apache.NMS.Stomp.State.ConnectionState)">
            <summary>
            </summary>
            <param name="transport"></param>
            <param name="connectionState"></param>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.CompositeTask">
            <summary>
            A Composite task is one of N tasks that can be managed by a 
            CompositTaskRunner instance.  The CompositeTaskRunner checks each
            task when its wakeup method is called to determine if the Task has
            any work it needs to complete, if no tasks have any pending work 
            then the CompositeTaskRunner can return to its sleep state until 
            the next time its wakeup method is called or it is shut down.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.Task">
            <summary>
            Represents a task that may take a few iterations to complete.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Threads.CompositeTask.IsPending">
            <summary>
            Indicates if this Task has any pending work.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.CompositeTaskRunner">
            <summary>
            A TaskRunner that dedicates a single thread to running a single Task.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.TaskRunner">
            <summary>
            Allows you to request a thread execute the associated Task.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.DedicatedTaskRunner">
            <summary>
            A TaskRunner that dedicates a single thread to running a single Task.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.ThreadPoolExecutor">
            <summary>
            This class provides a wrapper around the ThreadPool mechanism in .NET
            to allow for serial execution of jobs in the ThreadPool and provide
            a means of shutting down the execution of jobs in a deterministic
            way.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Threads.ThreadPoolExecutor.Future">
            <summary>
            Represents an asynchronous task that is executed on the ThreadPool
            at some point in the future.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.Failover.FailoverTransport">
            <summary>
            A Transport that is made reliable by being able to fail over to another
            transport when a transport failure is detected.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.ITransport">
            <summary>
            Represents the logical networking transport layer.  Transports implment the low
            level protocol specific portion of the Communication between the Client and a Broker
            such as TCP, UDP, etc.  Transports make use of WireFormat objects to handle translateing
            the cononical OpenWire Commands used in this client into binary wire level packets that
            can be sent to the Broker or Service that the Transport connects to.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.ITransport.Oneway(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Sends a Command object on the Wire but does not wait for any response from the
            receiver before returning.  
            </summary>
            <param name="command">
            A <see cref="P:Apache.NMS.Stomp.Transport.ITransport.Command"/>
            </param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.ITransport.AsyncRequest(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Sends a Command object which requires a response from the Broker but does not
            wait for the response, instead a FutureResponse object is returned that the
            caller can use to wait on the Broker's response.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.ITransport.Request(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Sends a Command to the Broker and waits for a Response to that Command before
            returning, this version waits indefinitely for a response.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.ITransport.Request(Apache.NMS.Stomp.Commands.Command,System.TimeSpan)">
            <summary>
            Sends a Command to the Broker and waits for the given TimeSpan to expire for a
            response before returning.  
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.ITransport.Narrow(System.Type)">
            <summary>
            Allows a caller to find a specific type of Transport in the Chain of
            Transports that is created.  This allows a caller to find a specific
            object in the Transport chain and set or get properties on that specific
            instance.  If the requested type isn't in the chain than Null is returned.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.Timeout">
            <summary>
            Timeout in milliseconds to wait for sending synchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.AsyncTimeout">
            <summary>
            Timeout in milliseconds to wait for sending asynchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.IsDisposed">
            <value>
            Indicates if this Transport has already been disposed and can no longer
            be used.
            </value>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.IsFaultTolerant">
            <value>
            Indicates if this Transport is Fault Tolerant or not.  A fault Tolerant
            Transport handles low level connection errors internally allowing a client
            to remain unaware of wire level disconnection and reconnection details.
            </value>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.IsConnected">
            <value>
            Indiciates if the Transport is current Connected to is assigned URI.
            </value>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.ITransport.RemoteAddress">
            <value>
            The Remote Address that this transport is currently connected to.
            </value>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.Failover.FailoverTransport.IsShutdownCommand(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            </summary>
            <param name="command"></param>
            <returns>Returns true if the command is one sent when a connection is being closed.</returns>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Failover.FailoverTransport.AsyncTimeout">
            <summary>
            If doing an asynchronous connect, the milliseconds before timing out if no connection can be made
            </summary>
            <value>The async timeout.</value>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.Failover.FailoverTransportFactory.CreateTransport(Apache.NMS.Util.URISupport.CompositeData)">
            <summary>
            </summary>
            <param name="compositData"></param>
            <returns></returns>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.Tcp.TcpTransport">
            <summary>
            An implementation of ITransport that uses sockets to communicate with the broker
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.Tcp.TcpTransport.Start">
            <summary>
            Method Start
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.TcpTransport.IsStarted">
            <summary>
            Property IsStarted
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.TcpTransport.Timeout">
            <summary>
            Timeout in milliseconds to wait for sending synchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.TcpTransport.AsyncTimeout">
            <summary>
            Timeout in milliseconds to wait for sending asynchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.SslTransport.ServerName">
            <summary>
            Indicates the name of the Server's Certificate.  By default the Host name
            of the remote server is used, however if this doesn't match the name of the
            Server's certificate then this option can be set to override the default.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.SslTransport.ClientCertFilename">
            <summary>
            Indicates the location of the Client Certificate to use when the Broker
            is configured for Client Auth (not common).  The SslTransport will supply
            this certificate to the SslStream via the SelectLocalCertificate method.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.SslTransport.ClientCertPassword">
            <summary>
            Password for the Client Certificate specified via configuration.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.Tcp.SslTransport.AcceptInvalidBrokerCert">
            <summary>
            Indicates if the SslTransport should ignore any errors in the supplied Broker
            certificate and connect anyway, this is useful in testing with a default AMQ
            broker certificate that is self signed.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.useInactivityMonitor">
            <summary>
            Should the Inactivity Monitor be enabled on this Transport.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.receiveBufferSize">
            <summary>
            Size in bytes of the receive buffer.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.sendBufferSize">
            <summary>
            Size in bytes of send buffer.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.receiveTimeout">
            <summary>
            The time-out value, in milliseconds. The default value is 0, which indicates
            an infinite time-out period. Specifying -1 also indicates an infinite time-out period.
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.sendTimeout">
            <summary>
            The time-out value, in milliseconds. If you set the property with a value between 1 and 499,
            the value will be changed to 500. The default value is 0, which indicates an infinite
            time-out period. Specifying -1 also indicates an infinite time-out period.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.Tcp.TcpTransportFactory.DoCreateTransport(System.Uri,System.Net.Sockets.Socket,Apache.NMS.Stomp.Transport.IWireFormat)">
            <summary>
            Override in a subclass to create the specific type of transport that is
            being implemented.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.FutureResponse">
            <summary>
            Handles asynchronous responses
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.InactivityMonitor">
            <summary>
            This class make sure that the connection is still alive,
            by monitoring the reception of commands from the peer of
            the transport.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.TransportFilter">
            <summary>
            Used to implement a filter on the transport layer.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.Oneway(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Method Oneway
            </summary>
            <param name="command">A  Command</param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.AsyncRequest(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Method AsyncRequest
            </summary>
            <returns>A FutureResponse</returns>
            <param name="command">A  Command</param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.Request(Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Method Request
            </summary>
            <returns>A Response</returns>
            <param name="command">A  Command</param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.Request(Apache.NMS.Stomp.Commands.Command,System.TimeSpan)">
            <summary>
            Method Request with time out for Response.
            </summary>
            <returns>A Response</returns>
            <param name="command">A  Command</param>
            <param name="timeout">Timeout in milliseconds</param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.Start">
            <summary>
            Method Start
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFilter.Dispose">
            <summary>
            Method Dispose
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.TransportFilter.IsStarted">
            <summary>
            Property IsStarted
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.TransportFilter.Timeout">
            <summary>
            Timeout in milliseconds to wait for sending synchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Transport.TransportFilter.AsyncTimeout">
            <summary>
            Timeout in milliseconds to wait for sending asynchronous messages or commands.
            Set to -1 for infinite timeout.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.InactivityMonitor.#ctor(Apache.NMS.Stomp.Transport.ITransport)">
            <summary>
            Constructor or the Inactivity Monitor
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.InactivityMonitor.WriteCheck">
            <summary>
            Check the write to the broker
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.InactivityMonitor.AllowReadCheck(System.TimeSpan)">
            <summary>
            Checks if we should allow the read check(if less than 90% of the read
            check time elapsed then we dont do the readcheck
            </summary>
            <param name="elapsed"></param>
            <returns></returns>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.LoggingTransport">
            <summary>
            A Transport filter that is used to log the commands sent and received.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.MutexTransport">
            <summary>
            A Transport which guards access to the next transport using a mutex.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Transport.ResponseCorrelator">
            <summary>
            A Transport that correlates asynchronous send/receive messages into single request/response.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFactory.CreateTransport(System.Uri)">
            <summary>
            Creates a normal transport.
            </summary>
            <param name="location"></param>
            <returns>the transport</returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Transport.TransportFactory.CreateTransportFactory(System.Uri)">
            <summary>
            Create a transport factory for the scheme.  If we do not support the transport protocol,
            an NMSConnectionException will be thrown.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.#ctor(System.String)">
            Construct an IdGenerator
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.GenerateId">
            <summary>
            Generate a Unique Id
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.GenerateSanitizedId">
            <summary>
            Generate a unique ID - that is friendly for a URL or file system
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.GetSeedFromId(System.String)">
            <summary>
            From a generated id - return the seed (i.e. minus the count)
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.GetSequenceFromId(System.String)">
            <summary>
            From a generated id - return the generator count
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Util.IdGenerator.Compare(System.String,System.String)">
            <summary>
            Does a proper compare on the ids
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Util.IdGenerator.HostName">
            <summary>
            As we have to find the hostname as a side-affect of generating a unique
            stub, we allow it's easy retrevial here
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.BrokerException">
            <summary>
            Exception thrown when the broker returns an error
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.BrokerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the BrokerException class with serialized data.
            Throws System.ArgumentNullException if the info parameter is null.
            Throws System.Runtime.Serialization.SerializationException if the class name is null or System.Exception.HResult is zero (0).
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Apache.NMS.Stomp.BrokerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the SerializationInfo
            with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Apache.NMS.Stomp.BrokerException.StackTraceDump(Apache.NMS.Stomp.Commands.StackTraceElement[])">
            <summary>
            Generates a nice textual stack trace
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Connection">
            <summary>
            Represents a connection with a message broker
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.Start">
            <summary>
            Starts asynchronous message delivery of incoming messages for this connection.
            Synchronous delivery is unaffected.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.Stop">
            <summary>
            Temporarily stop asynchronous delivery of inbound messages for this connection.
            The sending of outbound messages is unaffected.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.CreateSession">
            <summary>
            Creates a new session to work on this connection
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.CreateSession(Apache.NMS.AcknowledgementMode)">
            <summary>
            Creates a new session to work on this connection
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.SyncRequest(Apache.NMS.Stomp.Commands.Command)">
             <summary>
             Performs a synchronous request-response with the broker
             </summary>
            
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.CheckConnected">
            <summary>
            Check and ensure that the connection objcet is connected.  If it is not
            connected or is closed, a ConnectionClosedException is thrown.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.OnCommand(Apache.NMS.Stomp.Transport.ITransport,Apache.NMS.Stomp.Commands.Command)">
            <summary>
            Handle incoming commands
            </summary>
            <param name="commandTransport">An ITransport</param>
            <param name="command">A  Command</param>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.CreateTemporaryDestinationName">
            <summary>
            Creates a new temporary destination name
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Connection.CreateLocalTransactionId">
            <summary>
            Creates a new local transaction ID
            </summary>
        </member>
        <member name="E:Apache.NMS.Stomp.Connection.ExceptionListener">
            <summary>
            A delegate that can receive transport level exceptions.
            </summary>
        </member>
        <member name="E:Apache.NMS.Stomp.Connection.ConnectionInterruptedListener">
            <summary>
            An asynchronous listener that is notified when a Fault tolerant connection
            has been interrupted.
            </summary>
        </member>
        <member name="E:Apache.NMS.Stomp.Connection.ConnectionResumedListener">
            <summary>
            An asynchronous listener that is notified when a Fault tolerant connection
            has been resumed.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.AsyncSend">
            <summary>
            This property indicates whether or not async send is enabled.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.AckMode">
            <summary>
            This property sets the acknowledgment mode for the connection.
            The URI parameter connection.ackmode can be set to a string value
            that maps to the enumeration value.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.AlwaysSyncSend">
            <summary>
            This property forces all messages that are sent to be sent synchronously overriding
            any usage of the AsyncSend flag. This can reduce performance in some cases since the
            only messages we normally send synchronously are Persistent messages not sent in a
            transaction. This options guarantees that no send will return until the broker has
            acknowledge receipt of the message
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.CopyMessageOnSend">
            <summary>
            This property indicates whether Message's should be copied before being sent via
            one of the Connection's send methods.  Copying the Message object allows the user
            to resuse the Object over for another send.  If the message isn't copied performance
            can improve but the user must not reuse the Object as it may not have been sent
            before they reset its payload.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.SendAcksAsync">
            <summary>
            This property indicates whether or not async sends are used for
            message acknowledgement messages.  Sending Acks async can improve
            performance but may decrease reliability.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.DispatchAsync">
            <summary>
            synchronously or asynchronously by the broker.  Set to false for a slow
            consumer and true for a fast consumer.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.Transformation">
            <summary>
            Sets the default Transformation attribute applied to Consumers.  If a consumer
            is to receive Map messages from the Broker then the user should set the "jms-map-xml"
            transformation on the consumer so that all MapMessages are sent as XML.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.DefaultClientId">
            <summary>
            The Default Client Id used if the ClientId property is not set explicity.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.RedeliveryPolicy">
            <summary>
            Get/or set the redelivery policy for this connection.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Connection.IsStarted">
            <summary>
            This property determines if the asynchronous message delivery of incoming
            messages has been started for this connection.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.ConnectionClosedException">
            <summary>
            Exception thrown when a connection is used that it already closed
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.ConnectionClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionClosedException class with serialized data.
            Throws System.ArgumentNullException if the info parameter is null.
            Throws System.Runtime.Serialization.SerializationException if the class name is null or System.Exception.HResult is zero (0).
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Apache.NMS.Stomp.ConnectionFactory">
            <summary>
            Represents a connection with a message broker
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.ConnectionFactory.BrokerUri">
            <summary>
            Get/or set the broker Uri.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.ConnectionMetaData">
            <summary>
            Implements the Connection Meta-Data feature for Apache.NMS.ActiveMQ
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.IDispatcher">
            <summary>
            Interface that provides for a Class to provide dispatching service for
            an OpenWire MessageDispatch command.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.IOException">
            <summary>
            Exception thrown when an IO error occurs
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.ISynchronization.BeforeEnd">
            <summary>
            Called before a commit or rollback is applied.
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.ISynchronization.AfterCommit">
            <summary>
            Called after a commit
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.ISynchronization.AfterRollback">
            <summary>
            Called after a transaction rollback
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.MessageConsumer">
            <summary>
            An object capable of receiving messages from some destination
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.MessageConsumer.Dequeue(System.TimeSpan)">
            <summary>
            Used to get an enqueued message from the unconsumedMessages list. The
            amount of time this method blocks is based on the timeout value.  if
            timeout == Timeout.Infinite then it blocks until a message is received.
            if timeout == 0 then it it tries to not block at all, it returns a
            message if it is available if timeout > 0 then it blocks up to timeout
            amount of time.  Expired messages will consumed by this method.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.MessageProducer">
            <summary>
            An object capable of sending messages to some destination
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.PrefetchPolicy">
            <summary>
            Class used to define the various limits that should be used for the Prefetch
            limit on destination based on the type of Destination in use.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.RequestTimedOutException">
            <summary>
            Exception thrown when an Request times out.
            </summary>
        </member>
        <member name="T:Apache.NMS.Stomp.Session">
            <summary>
            Default provider of ISession
            </summary>
        </member>
        <member name="F:Apache.NMS.Stomp.Session.myLock">
            <summary>
            Private object used for synchronization, instead of public "this"
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Session.DeleteDestination(Apache.NMS.IDestination)">
            <summary>
            Delete a destination (Queue, Topic, Temp Queue, Temp Topic).
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Session.DoStartTransaction">
            <summary>
            Ensures that a transaction is started
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.Session.DoNothingAcknowledge(Apache.NMS.Stomp.Commands.Message)">
            <summary>
            Prevents message from throwing an exception if a client calls Acknoweldge on
            a message that is part of a transaction either being produced or consumed.  The
            JMS Spec indicates that users should be able to call Acknowledge with no effect
            if the message is in a transaction.
            </summary>
            <param name="message">
            A <see cref="T:Apache.NMS.Stomp.Commands.Message"/>
            </param>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.PrefetchSize">
            <summary>
            Sets the prefetch size, the maximum number of messages a broker will dispatch to consumers
            until acknowledgements are received.
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.MaximumPendingMessageLimit">
            <summary>
            Sets the maximum number of messages to keep around per consumer
            in addition to the prefetch window for non-durable topics until messages
            will start to be evicted for slow consumers.
            Must be > 0 to enable this feature
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.DispatchAsync">
            <summary>
            Enables or disables whether asynchronous dispatch should be used by the broker
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.Exclusive">
            <summary>
            Enables or disables exclusive consumers when using queues. An exclusive consumer means
            only one instance of a consumer is allowed to process messages on a queue to preserve order
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.Retroactive">
            <summary>
            Enables or disables retroactive mode for consumers; i.e. do they go back in time or not?
            </summary>
        </member>
        <member name="P:Apache.NMS.Stomp.Session.Priority">
            <summary>
            Sets the default consumer priority for consumers
            </summary>
        </member>
        <member name="M:Apache.NMS.Stomp.TransactionContext.AddSynchronization(Apache.NMS.Stomp.ISynchronization)">
            <summary>
            Method AddSynchronization
            </summary>
        </member>
    </members>
</doc>
